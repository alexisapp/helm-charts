# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
revisionHistoryLimit: 10
containerPort: 4000

environment: "staging"

vaultArddr: {}
vaultToken: {}
vaultRole: {}
appNamespace: {}
appName: {}
appCommand: {}

config: {}
secrets: {}
linkerd: false

image:
  repository: eu.gcr.io/alexishr-infra/alexis-microservice
  tag: master
  pullPolicy: Always

# readinessProbe:
#   httpGet:
#     path: /readiness
#     port: 4000
#   initialDelaySeconds: 5
#   periodSeconds: 5
# livenessProbe:
#   httpGet:
#     path: /liveness
#     port: 4000
#   initialDelaySeconds: 30
#   periodSeconds: 10

server:
  enabled: true
  spotTolerant: false
  command:
   - sh
   - entrypoint.sh
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  resources:
    limits:
      memory: 400Mi
    requests:
      cpu: 150m
      memory: 250Mi
  pdb:
    enabled: true
    minAvailable: 1
  podAntiAffinity:
    enabled: true
  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    metrics:
      cpu:
        targetAverageUtilization: 70
      memory:
        targetAverageUtilization: 80

worker:
  enabled: false
  spotTolerant: false
  command:
   - sh
   - entrypoint.sh
  replicaCount: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  resources:
    limits:
      cpu: 300m
      memory: 400Mi
    requests:
      cpu: 100m
      memory: 250Mi
  pdb:
    enabled: true
    minAvailable: 1
  podAntiAffinity:
    enabled: true
  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    metrics:
      cpu:
        targetAverageUtilization: 70
      memory:
        targetAverageUtilization: 80

migration:
  enabled: false
  command:
   - sh
   - entrypoint.sh
  schedule: "0 0 1 7 *"
  resources:
    limits:
      cpu: 1000m
      memory: 1000Mi
    requests:
      cpu: 800m
      memory: 800Mi

volumes: []
volumeMounts: []

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local