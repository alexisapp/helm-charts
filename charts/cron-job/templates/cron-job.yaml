apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "{{ .Release.Name }}-cron-job"
  labels:
    chart: '{{ .Release.Name }}-{{ .Chart.Version | replace "+" "_" }}'
spec:
  schedule: "{{ .Values.schedule }}"
  concurrencyPolicy: {{ .Values.concurrencyPolicy }}
  startingDeadlineSeconds: {{ .Values.startingDeadlineSeconds }}
  successfulJobsHistoryLimit: {{ .Values.successfulJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: 3
      template:
        metadata:
          labels:
            app.kubernetes.io/processType: cron-job
        spec:
          restartPolicy: "Never"
          nodeSelector:
            env: "{{ .Values.environment }}"
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app.kubernetes.io/processType
                          operator: In
                          values:
                            - cron-job
                    topologyKey: "kubernetes.io/hostname"
          containers:
            - name: {{ .Release.Name }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              env:
                - name: PROCESS_TYPE
                  value : "cron-job"
              envFrom:
                - configMapRef:
                    name: "{{ .Values.config }}"
                - secretRef:
                    name: "{{ .Values.secrets }}"
              command:
              - "/bin/bash"
              - "-c"
              args:
              - "{{ .Values.command }}"
              {{ if .Values.volumeMounts }}
              volumeMounts:
{{ toYaml .Values.volumeMounts | indent 14 }}
              {{ end }}
              resources:
                limits:
                  cpu: "{{ .Values.resources.limits.cpu }}"
                  memory: "{{ .Values.resources.limits.memory }}"
                requests:
                  cpu: "{{ .Values.resources.requests.cpu }}"
                  memory: "{{ .Values.resources.requests.memory }}"
          {{- if .Values.volumes }}
          volumes:
{{ toYaml .Values.volumes | indent 10 }}
          {{- end }}
